"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromLab = exports.fromHSLA = exports.xyz = exports.D65 = void 0;
/**
 * A `Color` represented by XYZ coordinates in the CIE 1931 color space. Note
 * that a `Color` always represents a color in the sRGB gamut (colors that
 * can be represented on a typical computer screen) while the XYZ color space
 * is bigger.
 *
 * See:
 * - [https://en.wikipedia.org/wiki/CIE_1931_color_space](https://en.wikipedia.org/wiki/CIE_1931_color_space)
 * - [https://en.wikipedia.org/wiki/SRGB](https://en.wikipedia.org/wiki/SRGB)
 *
 * @since 0.1.5
 */
var number = __importStar(require("fp-ts/number"));
var Ord = __importStar(require("fp-ts/Ord"));
var RGBA = __importStar(require("./RGBA"));
/**
 * Illuminant D65 constants
 *
 * @internal
 */
exports.D65 = { xn: 0.95047, yn: 1.0, zn: 1.08883 };
var clampNumber = Ord.clamp(number.Ord);
/**
 * @category constructors
 * @since 0.1.5
 */
var xyz = function (x, y, z) { return ({
    x: clampNumber(0.0, exports.D65.xn)(x),
    y: clampNumber(0.0, exports.D65.yn)(y),
    z: clampNumber(0.0, exports.D65.zn)(z)
}); };
exports.xyz = xyz;
/**
 * @category constructors
 * @since 0.1.5
 */
var fromHSLA = function (c) {
    var finv = function (c) {
        return c <= 0.04045 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);
    };
    var rec = RGBA.normalizedFromHSLA(c);
    var r = finv(rec.r);
    var g = finv(rec.g);
    var b = finv(rec.b);
    var x = 0.4124 * r + 0.3576 * g + 0.1805 * b;
    var y = 0.2126 * r + 0.7152 * g + 0.0722 * b;
    var z = 0.0193 * r + 0.1192 * g + 0.9505 * b;
    return exports.xyz(x, y, z);
};
exports.fromHSLA = fromHSLA;
/**
 * @category constructors
 * @since 0.1.5
 */
var fromLab = function (_a) {
    var l = _a.l, a = _a.a, b = _a.b;
    var delta = 6.0 / 29.0;
    var finv = function (t) {
        return t > delta ? Math.pow(t, 3.0) : 3.0 * delta * delta * (t - 4.0 / 29.0);
    };
    var l2 = (l + 16.0) / 116.0;
    var x = exports.D65.xn * finv(l2 + a / 500.0);
    var y = exports.D65.yn * finv(l2);
    var z = exports.D65.zn * finv(l2 - b / 200.0);
    return exports.xyz(x, y, z);
};
exports.fromLab = fromLab;
//# sourceMappingURL=XYZ.js.map